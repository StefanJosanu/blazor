@using System.Net.Http.Json
@inject HttpClient httpClient
@inject IProductService ProductService
@inject ILocationService LocationService
@inject NavigationManager navigation
<MudDialog>
    <DialogContent>
        <EditForm Model="@product" class="pop_up" style="padding: 20px;">
            <div class="d-flex flex-column align-items-center">
                <div class="form-group" style="margin-bottom: 15px;">
                    <label for="Name">Name</label>
                    <InputText id="Name" @bind-Value="@product.Name" class="form-control"></InputText>
                </div>
                <div class="form-group" style="margin-bottom: 15px;">
                    <label for="ShortDescription">Short Description</label>
                    <InputText id="ShortDescription" @bind-Value="@product.ShortDescription" class="form-control"></InputText>
                </div>
                <div class="form-group" style="margin-bottom: 15px;">
                    <label for="Description">Short Description</label>
                    <InputText id="Description" @bind-Value="@product.Description" class="form-control"></InputText>
                </div>
                <div class="form-group" style="margin-bottom: 15px;">
                    <label for="Price">Price</label>
                    <InputNumber id="Price" @bind-Value="@product.Price" class="form-control"></InputNumber>
                </div>
                <div class="form-group" style="margin-bottom: 15px;">
                    <label for="StockQuantity">Stock Quantity</label>
                    <InputNumber id="StockQuantity" @bind-Value="@product.StockQuantity" class="form-control"></InputNumber>
                </div>
                <div class="form-group">
                    <MudSelect T="Guid?" @bind-Value="@product.StockLocationId" Label="Select Location" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter">
                        @if(getLocations != null)
                        {
                            @foreach (var location in getLocations)
                            {
                                <MudSelectItem Value="@location.Id">@location.Name</MudSelectItem>
                            }
                        }
                    </MudSelect>
                </div>
                <br />
                <br />
            </div>
        </EditForm>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="CreateProduct">Create</MudButton>
    </DialogActions>
</MudDialog>

@code {
    private List<GetProductDTO> products { get; set; }
    private List<LocationDTO> getLocations { get; set; }
    public CreateProductDTO product = new CreateProductDTO();
    protected override async Task OnInitializedAsync()
    {
        products = await ProductService.GetAllProducts();
        getLocations = await LocationService.GetLocations();
    }

    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }

    private void Submit() => MudDialog.Close(DialogResult.Ok(true));

    private void Cancel() => MudDialog.Cancel();
    public async Task CreateProduct()
    {
        Console.WriteLine($"Stock Location Id: {product.StockLocationId}");
        await ProductService.CreateProduct(product);
        navigation.NavigateTo(navigation.Uri, true);
    }
}
