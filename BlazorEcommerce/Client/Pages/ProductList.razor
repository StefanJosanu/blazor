@page "/products"
@using System.Net.Http.Json
@inject HttpClient httpClient
@inject IProductService ProductService
@inject NavigationManager navigation

<div class="container">
    <MudPopover Open="@_open" Fixed="true">
        <EditForm Model="@product" class="pop_up" style="padding: 20px;">
            <div class="d-flex flex-column align-items-center">
                <div class="form-group" style="margin-bottom: 15px;">
                    <label for="Name">Name</label>
                    <InputText id="Name" @bind-Value="@product.Name" class="form-control"></InputText>
                </div>
                <div class="form-group" style="margin-bottom: 15px;">
                    <label for="ShortDescription">Short Description</label>
                    <InputText id="ShortDescription" @bind-Value="@product.ShortDescription" class="form-control"></InputText>
                </div>
                <div class="form-group" style="margin-bottom: 15px;">
                    <label for="Description">Short Description</label>
                    <InputText id="Description" @bind-Value="@product.Description" class="form-control"></InputText>
                </div>
                <div class="form-group" style="margin-bottom: 15px;">
                    <label for="Price">Price</label>
                    <InputNumber id="Price" @bind-Value="@product.Price" class="form-control"></InputNumber>
                </div>
                <div class="form-group" style="margin-bottom: 15px;">
                    <label for="StockQuantity">Stock Quantity</label>
                    <InputNumber id="StockQuantity" @bind-Value="@product.StockQuantity" class="form-control"></InputNumber>
                </div>
                <div class="form-group">
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" OnClick="CreateProduct">Create</MudButton>
                    <MudButton OnClick="@ToggleOpen" class="ml-2" Color="Color.Error">Close</MudButton>
                </div>
            </div>
        </EditForm>
    </MudPopover>
</div>

@if(products != null)
{ 
        <div class="container">
            <h1>Product List</h1>
            <MudTable Items="@products" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info">
            <ToolBarContent>
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@ToggleOpen">Add Product</MudButton>
            </ToolBarContent>
                    <HeaderContent>
                        <MudTh>Name</MudTh>
                        <MudTh>Short Description</MudTh>
                        <MudTh>Description</MudTh>
                        <MudTh>Price</MudTh>
                        <MudTh>Stock Quantity</MudTh>
                        <MudTh>Stock Location Name</MudTh>
                        <MudTh>Stock Location Address</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Name">@context.Name</MudTd>
                        <MudTd DataLabel="Short Description">@context.ShortDescription</MudTd>
                        <MudTd DataLabel="Description">@context.Description</MudTd>
                        <MudTd DataLabel="Price">@context.Price</MudTd>
                        <MudTd DataLabel="Stock Quantity">@context.StockQuantity</MudTd>
                        <MudTd DataLabel="Stock Location Name">@context.StockLocationName</MudTd>
                        <MudTd DataLabel="Stock Location Address">@context.StockLocationAddress</MudTd>
                    </RowTemplate>
            </MudTable>
        </div>
}

@if (products == null)
{
    <div class="container">
        <span>Loading...</span>
    </div>
}

@if (products != null && products.Count == 0)
{
    <div class="container">
        <span>Product List is empty.</span>
    </div>
}

@code {
    private List<GetProductDTO> products { get; set; }
    public CreateProductDTO product = new CreateProductDTO();
    private bool _open = false;
    protected override async Task OnInitializedAsync()
    {
        products = await ProductService.GetAllProducts();
    }
    public void CreateProduct()
    {
        ProductService.CreateProduct(product);
        _open = false;
        navigation.NavigateTo(navigation.Uri, true);
    }
    private void ToggleOpen() => _open = !_open;
}
